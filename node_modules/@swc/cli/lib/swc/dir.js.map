{"version":3,"sources":["../../src/swc/dir.ts"],"sourcesContent":["import slash from \"slash\";\nimport { existsSync, promises } from \"fs\";\nimport { dirname, relative, join } from \"path\";\nimport { CompileStatus } from \"./constants\";\nimport { CliOptions } from \"./options\";\nimport { compile } from \"./util\";\nimport { outputResult } from \"./compile\";\nimport {\n  globSources,\n  isCompilableExtension,\n  slitCompilableAndCopyable,\n  watchSources,\n} from \"./sources\";\n\nimport type { Options } from \"@swc/core\";\n\ndeclare module \"fs\" {\n  namespace promises {\n    /**\n     * For node > 14 we want to use rm instead of rmdir\n     * We need to augment node v12 types\n     */\n    function rm(dir: string, option: object): void;\n  }\n}\n\nconst { mkdir, rmdir, rm, copyFile, unlink } = promises;\n\nconst cwd = process.cwd();\nconst recursive = { recursive: true };\n\n/**\n * Removes the leading directory, including all parent relative paths\n */\nfunction stripComponents(filename: string) {\n  const components = filename.split(\"/\").slice(1);\n  if (!components.length) {\n    return filename;\n  }\n  while (components[0] === \"..\") {\n    components.shift();\n  }\n  return components.join(\"/\");\n}\n\nfunction getDest(filename: string, outDir: string, ext?: string) {\n  const relativePath = slash(relative(cwd, filename));\n  let base = stripComponents(relativePath);\n  if (ext) {\n    base = base.replace(/\\.\\w*$/, ext);\n  }\n  return join(outDir, base);\n}\n\nasync function handleCompile(\n  filename: string,\n  outDir: string,\n  sync: boolean,\n  swcOptions: Options\n) {\n  const dest = getDest(filename, outDir, \".js\");\n  const sourceFileName = slash(relative(dirname(dest), filename));\n\n  const options = { ...swcOptions, sourceFileName };\n\n  const result = await compile(filename, options, sync, dest);\n\n  if (result) {\n    await outputResult(result, filename, dest, options);\n    return CompileStatus.Compiled;\n  } else {\n    return CompileStatus.Omitted;\n  }\n}\n\nasync function handleCopy(filename: string, outDir: string) {\n  const dest = getDest(filename, outDir);\n  const dir = dirname(dest);\n\n  console.log(filename);\n  await mkdir(dir, recursive);\n  await copyFile(filename, dest);\n\n  return CompileStatus.Copied;\n}\n\nasync function beforeStartCompilation(cliOptions: CliOptions) {\n  const { outDir, deleteDirOnStart } = cliOptions;\n\n  if (deleteDirOnStart) {\n    const exists = await existsSync(outDir);\n    if (exists) {\n      rm ? await rm(outDir, recursive) : await rmdir(outDir, recursive);\n    }\n  }\n}\n\nasync function initialCompilation(cliOptions: CliOptions, swcOptions: Options) {\n  const {\n    includeDotfiles,\n    filenames,\n    copyFiles,\n    extensions,\n    outDir,\n    sync,\n    quiet,\n    watch,\n  } = cliOptions;\n\n  const results = new Map<string, CompileStatus>();\n\n  const start = process.hrtime();\n  const sourceFiles = await globSources(filenames, includeDotfiles);\n  const [compilable, copyable] = slitCompilableAndCopyable(\n    sourceFiles,\n    extensions,\n    copyFiles\n  );\n\n  if (sync) {\n    for (const filename of compilable) {\n      try {\n        const result = await handleCompile(filename, outDir, sync, swcOptions);\n        results.set(filename, result);\n      } catch (err: any) {\n        console.error(err.message);\n        results.set(filename, CompileStatus.Failed);\n      }\n    }\n    for (const filename of copyable) {\n      try {\n        const result = await handleCopy(filename, outDir);\n        results.set(filename, result);\n      } catch (err: any) {\n        console.error(err.message);\n        results.set(filename, CompileStatus.Failed);\n      }\n    }\n  } else {\n    await Promise.all([\n      Promise.allSettled(\n        compilable.map(file =>\n          handleCompile(file, outDir, sync, swcOptions).catch(err => {\n            console.error(err.message);\n            throw err;\n          })\n        )\n      ),\n      Promise.allSettled(copyable.map(file => handleCopy(file, outDir))),\n    ]).then(([compiled, copied]) => {\n      compiled.forEach((result, index) => {\n        const filename = compilable[index];\n        if (result.status === \"fulfilled\") {\n          results.set(filename, result.value);\n        } else {\n          results.set(filename, CompileStatus.Failed);\n        }\n      });\n\n      copied.forEach((result, index) => {\n        const filename = copyable[index];\n        if (result.status === \"fulfilled\") {\n          results.set(filename, result.value);\n        } else {\n          results.set(filename, CompileStatus.Failed);\n        }\n      });\n    });\n  }\n  const end = process.hrtime(start);\n\n  let failed = 0;\n  let compiled = 0;\n  let copied = 0;\n  for (let [_, status] of results) {\n    switch (status) {\n      case CompileStatus.Compiled:\n        compiled += 1;\n        break;\n      case CompileStatus.Failed:\n        failed += 1;\n        break;\n      case CompileStatus.Copied:\n        copied += 1;\n        break;\n    }\n  }\n\n  if (!quiet && compiled + copied) {\n    let message = \"\";\n    if (compiled) {\n      message += `Successfully compiled: ${compiled} ${\n        compiled > 1 ? \"files\" : \"file\"\n      }`;\n    }\n    if (compiled && copied) {\n      message += \", \";\n    }\n    if (copied) {\n      message += `copied ${copied} ${copied > 1 ? \"files\" : \"file\"}`;\n    }\n    message += ` with swc (%dms)`;\n\n    console.log(message, (end[1] / 1000000).toFixed(2));\n  }\n\n  if (failed) {\n    console.log(\n      `Failed to compile ${failed} ${failed !== 1 ? \"files\" : \"file\"} with swc.`\n    );\n    if (!watch) {\n      const files = Array.from(results.entries())\n        .filter(([, status]) => status === CompileStatus.Failed)\n        .map(([filename, _]) => filename)\n        .join(\"\\n\");\n      throw new Error(`Failed to compile:\\n${files}`);\n    }\n  }\n}\n\nasync function watchCompilation(cliOptions: CliOptions, swcOptions: Options) {\n  const {\n    includeDotfiles,\n    filenames,\n    copyFiles,\n    extensions,\n    outDir,\n    quiet,\n    sync,\n  } = cliOptions;\n\n  const watcher = await watchSources(filenames, includeDotfiles);\n  watcher.on(\"ready\", () => {\n    if (!quiet) {\n      console.info(\"Watching for file changes.\");\n    }\n  });\n  watcher.on(\"unlink\", async filename => {\n    try {\n      if (isCompilableExtension(filename, extensions)) {\n        await unlink(getDest(filename, outDir, \".js\"));\n      } else if (copyFiles) {\n        await unlink(getDest(filename, outDir));\n      }\n    } catch (err: any) {\n      if (err.code !== \"ENOENT\") {\n        console.error(err.stack);\n      }\n    }\n  });\n  for (const type of [\"add\", \"change\"]) {\n    watcher.on(type, async filename => {\n      if (isCompilableExtension(filename, extensions)) {\n        try {\n          const start = process.hrtime();\n          const result = await handleCompile(\n            filename,\n            outDir,\n            sync,\n            swcOptions\n          );\n          if (!quiet && result === CompileStatus.Compiled) {\n            const end = process.hrtime(start);\n            console.log(\n              `Successfully compiled ${filename} with swc (%dms)`,\n              (end[1] / 1000000).toFixed(2)\n            );\n          }\n        } catch (err: any) {\n          console.error(err.message);\n        }\n      } else if (copyFiles) {\n        try {\n          const start = process.hrtime();\n          const result = await handleCopy(filename, outDir);\n          if (!quiet && result === CompileStatus.Copied) {\n            const end = process.hrtime(start);\n            console.log(\n              `Successfully copied ${filename} with swc (%dms)`,\n              (end[1] / 1000000).toFixed(2)\n            );\n          }\n        } catch (err: any) {\n          console.error(`Failed to copy ${filename}`);\n          console.error(err.message);\n        }\n      }\n    });\n  }\n}\n\nexport default async function dir({\n  cliOptions,\n  swcOptions,\n}: {\n  cliOptions: CliOptions;\n  swcOptions: Options;\n}) {\n  const { watch } = cliOptions;\n\n  await beforeStartCompilation(cliOptions);\n  await initialCompilation(cliOptions, swcOptions);\n\n  if (watch) {\n    await watchCompilation(cliOptions, swcOptions);\n  }\n}\n"],"names":["dir","cliOptions","swcOptions","watch","beforeStartCompilation","initialCompilation","watchCompilation","mkdir","rmdir","rm","copyFile","unlink","promises","cwd","process","recursive","stripComponents","filename","components","split","slice","length","shift","join","getDest","outDir","ext","relativePath","slash","relative","base","replace","handleCompile","sync","dest","sourceFileName","dirname","options","result","compile","outputResult","CompileStatus","Compiled","Omitted","handleCopy","console","log","Copied","deleteDirOnStart","exists","existsSync","includeDotfiles","filenames","copyFiles","extensions","quiet","results","Map","start","hrtime","sourceFiles","globSources","compilable","copyable","slitCompilableAndCopyable","set","err","error","message","Failed","Promise","all","allSettled","map","file","catch","then","compiled","copied","forEach","index","status","value","end","failed","_","toFixed","files","Array","from","entries","filter","Error","watcher","watchSources","on","info","isCompilableExtension","code","stack","type"],"mappings":"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"}